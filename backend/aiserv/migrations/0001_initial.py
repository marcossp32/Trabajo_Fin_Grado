# Generated by Django 5.1.5 on 2025-05-04 14:53

import aiserv.config.priority
import django.contrib.postgres.fields
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254, unique=True)),
                ('meeting_duration', models.IntegerField(blank=True, null=True)),
                ('notify_meeting', models.BooleanField(default=False)),
                ('propose_meeting', models.BooleanField(default=False)),
                ('meeting_limit', models.IntegerField(blank=True, null=True)),
                ('free_days', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254)),
                ('sender', models.EmailField(max_length=254)),
                ('subject', models.CharField(blank=True, max_length=100, null=True)),
                ('summary', models.CharField(blank=True, max_length=100, null=True)),
                ('sent_date', models.TimeField(blank=True, null=True)),
                ('expire_date', models.TimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('body', models.CharField(blank=True, max_length=100, null=True)),
                ('sent_date', models.DateTimeField(blank=True, null=True)),
                ('expire_date', models.DateTimeField(blank=True, null=True)),
                ('read', models.BooleanField(default=False)),
                ('sender', models.EmailField(max_length=254)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PriorityConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254, unique=True)),
                ('priority_issues', models.CharField(blank=True, max_length=100, null=True)),
                ('priority_people', models.CharField(blank=True, max_length=100, null=True)),
                ('priority_hours_from', models.TimeField(blank=True, null=True)),
                ('priority_hours_to', models.TimeField(blank=True, null=True)),
                ('priority_days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, null=True, size=None)),
                ('notification_low', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, default=aiserv.config.priority.default_low, null=True, size=None)),
                ('notification_moderate', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, default=aiserv.config.priority.default_moderate, null=True, size=None)),
                ('notification_high', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, default=aiserv.config.priority.default_high, null=True, size=None)),
                ('notification_urgent', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100), blank=True, default=aiserv.config.priority.default_urgent, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='PromptData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TextField()),
                ('date', models.TextField()),
                ('change_date', models.TextField()),
                ('place', models.TextField()),
                ('participants', models.TextField()),
                ('email_type', models.TextField()),
                ('link', models.TextField()),
                ('attachments', models.TextField()),
                ('details', models.TextField()),
                ('duration', models.TextField()),
                ('previous_messages', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PromptResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.TextField()),
                ('email', models.TextField()),
                ('availability_yes', models.TextField()),
                ('availability_no', models.TextField()),
                ('instructions', models.TextField()),
                ('emotion1', models.TextField()),
                ('emotion2', models.TextField()),
                ('emotion3', models.TextField()),
                ('previous_messages', models.TextField()),
                ('full_name', models.TextField()),
                ('charge', models.TextField()),
                ('language', models.TextField()),
                ('details', models.TextField()),
                ('work_hour', models.TextField()),
                ('decline_event_hour', models.TextField()),
                ('decline_event_day', models.TextField()),
                ('priority_people', models.TextField()),
                ('priority_issues', models.TextField()),
                ('duration_event', models.TextField()),
                ('max_events', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254, unique=True)),
                ('work_hours_from', models.TimeField(blank=True, null=True)),
                ('work_hours_to', models.TimeField(blank=True, null=True)),
                ('no_meetings_hours_from', models.TimeField(blank=True, null=True)),
                ('no_meetings_hours_to', models.TimeField(blank=True, null=True)),
                ('no_meetings_days', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, null=True, size=None)),
                ('tolerance', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StartConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gmail', models.EmailField(max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, max_length=100, null=True)),
                ('charge', models.CharField(blank=True, max_length=100, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('details', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='aiservUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=255)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('auth_token_access', models.TextField(blank=True, null=True)),
                ('auth_token_refresh', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active_auto', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
