server {
    listen 80;
    server_name www.aiserv.es;

    # Redirigir a HTTPS si no est√° ya
    return 301 https://www.aiserv.es$request_uri;
}

server {
    listen 443 ssl;
    server_name www.aiserv.es;

    # SSL
    ssl_certificate /etc/letsencrypt/live/www.aiserv.es/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/www.aiserv.es/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Frontend build
    root /opt/TFG-Marcos/frontend/dist;
    index index.html index.htm;

    # Ruta principal (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy al backend para /api
    location ^~ /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Cookie $http_cookie; 

        # CORS headers
        add_header Access-Control-Allow-Origin "https://www.aiserv.es" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        if ($request_method = OPTIONS) {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Proxy alternativo a /api2
    location ^~ /api2/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Proxy WebSocket al backend
    location /ws/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

}
